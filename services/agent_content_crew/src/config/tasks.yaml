research_task:
  description: >
    Conduct supplemental research based on the marketing brief for {product_name}.
    
    1.  **Audience:** Search for {psychographics} and {demographics} of the {primary_audience}. If psychographics are not provided, find common ones for this audience.
    2.  **Pain Points:** If {target_pain_points} are missing, find 3-5 most common problems for the {problem_statement}.
    3.  **Market Trends:** Analyze 2-3 key market trends for the {category}.
    3.  **Competitors:** Analyze the {known_competitors}. Find 2-3 more competitors in the {category}.
    4.  **SEO:** Identify the top 10 SEO keywords for '{product_name}' and '{category}'.
    
    You MUST format your output as a JSON object that strictly adheres
    to the 'ResearchReport' pydantic schema.
  expected_output: >
    A single, valid JSON object that matches the 'ResearchReport' pydantic schema.
    Do not add any other text or pre-amble around the JSON object.
  agent: researcher # Assigns to the 'researcher' agent
  output_pydantic: "src.models.research_models.ResearchReport"

writing_task:
  description: >
    Use the research report from the previous step AND the original marketing brief 
    to write the content for {product_name}.
    1. A 500-word SEO-friendly blog post.
    2. A set of concise copy for a product landing page.
    
    - **Brief Compliance:** Adhere strictly to the '{tone_and_personality}', '{usp}', 
      '{key_features}', '{main_benefits}', and '{main_goal}'.
    - **Blog Post:** Write a 500-word SEO-friendly blog post.
    - **Landing Page:** Write concise copy for the landing page.
    - **Output:** You MUST format your output as a JSON object that strictly adheres
        to the 'MarketingContent' pydantic schema.
  expected_output: >
    A single, valid JSON object that matches the 'MarketingContent' pydantic schema.
    Do not add any other text or pre-amble around the JSON object.
  agent: copywriter
  context:
    - research_task # depends on the output of 'research_task'
  output_pydantic: "src.models.content_models.MarketingContent"

editing_task:
  description: >
    You will receive a 'MarketingContent' JSON object. Your job is to act as a
    guardrail and final editor.
    
    1.  Receive the 'MarketingContent' JSON object from the copywriter.
    2.  **Guardrail Checks:** 
        - Ensure the content's tone matches the brief's '{tone_and_personality}'.
        - Ensure content is professional and free of errors.
        - Check for and remove any profanity, biased, or inappropriate language.
        - Ensure all landing page blurbs are concise.
        - Ensure the '{usp}' is clearly communicated.
    3. **Editing:**
           - Perform a final polish for SEO optimization, grammar, and alignment with the research.
    4.  **Format & Publish:** Convert the landing page JSON object into a single, clean markdown string.
    5.  **Upload:** Use the MinIO uploader tool:
        - Upload the blog post as 'blog_post.md' to the '{bucket_name}' bucket.
        - Upload the formatted landing page copy as 'landing_page.md' to the '{bucket_name}' bucket.
  expected_output: >
    Confirmation messages for two successful uploads:
    - 'Successfully uploaded 'blog_post.md' to bucket '{bucket_name}'.'
    - 'Successfully uploaded 'landing_page.md' to bucket '{bucket_name}'.'
  agent: editor
  context:
    - writing_task # depends on the output of 'writing_task'